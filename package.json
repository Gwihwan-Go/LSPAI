{
  "name": "lspAi",
  "displayName": "LSPAI",
  "publisher": "GwihwanGo",
  "description": "LSPAI is a powerful VS Code extension that revolutionizes unit test creation through Language Server Protocol (LSP) integration. Generate high-quality unit tests automatically and in real-time for multiple programming languages.",
  "version": "0.0.3",
  "icon": "doc/assets/lspai_image_v2.jpg",
  "repository": {
    "type": "git",
    "url": "https://github.com/GwihwanGo/LSPAI.git"
  },
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other"
  ],
  "extensionDependencies": [
    "ms-python.python",
    "ms-python.vscode-pylance",
    "oracle.oracle-java",
    "redhat.java",
    "golang.go"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.acceptChanges",
        "title": "Accept Changes"
      },
      {
        "command": "extension.rejectChanges",
        "title": "Reject Changes"
      },
      {
        "command": "extension.testLLM",
        "title": "Test LLM"
      },
      {
        "command": "extension.showInlineSuggestion",
        "title": "Show Inline Suggestion"
      },
      {
        "command": "lspAi.JavaExperiment",
        "title": "LSPAI: Java-Experiment"
      },
      {
        "command": "lspAi.CollectTrainData",
        "title": "LSPAI: Collect Train Data"
      },
      {
        "command": "lspAi.GoExperiment",
        "title": "LSPAI: Go-Experiment"
      },
      {
        "command": "lspAi.PythonExperiment",
        "title": "LSPAI: Python-Experiment"
      },
      {
        "command": "lspAi.CopilotExperiment",
        "title": "LSPAI: Copilot-Experiment"
      },
      {
        "command": "lspAi.GoExperiment",
        "title": "LSPAI: Go-Experiment"
      },
      {
        "command": "extension.generateUnitTest",
        "title": "LSPAI: Generate Unit Test"
      },
      {
        "command": "lspAi.ReExperiment",
        "title": "LSPAI: Re-Experiment"
      },
      {
        "command": "lspAi.showSettings",
        "title": "LSPAI: Show Current Settings"
      },
      {
        "command": "extension.diagnostic",
        "title": "LSPAI: Diagnostic"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.generateUnitTest",
          "when": "editorTextFocus",
          "group": "navigation"
        },
        {
          "command": "extension.diagnostic",
          "when": "editorTextFocus",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "LLM LSP Unit Test Generator",
      "properties": {
        "lspAi.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for OpenAI"
        },
        "lspAi.deepseekApiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Deepseek"
        },
        "lspAi.proxyUrl": {
          "type": "string",
          "default": "",
          "description": "Proxy URL for API calls"
        },
        "lspAi.localLLMUrl": {
          "type": "string",
          "default": "",
          "description": "Proxy URL for API calls"
        },
        "lspAi.provider": {
          "type": "string",
          "default": "deepseek",
          "description": "Provider of LLM"
        },
        "lspAi.summarizeContext": {
          "type": "boolean",
          "default": true,
          "description": "Summarize context for code generation"
        },
        "lspAi.model": {
          "type": "string",
          "default": "deepseek-chat",
          "description": "Model to use for code generation"
        },
        "lspAi.promptType": {
          "type": "string",
          "default": "basic",
          "description": "Prompt type to use for code generation",
          "enum": [
            "basic",
            "detailed",
            "concise"
          ]
        },
        "lspAi.maxRound": {
          "type": "number",
          "default": 5,
          "description": "Maximum number of rounds for code generation"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "build": "tsc",
    "test": "node ./out/test/runTest.js $TEST_FILE",
    "test:util": "node ./out/test/runTest.js util",
    "experiment": "npm run compile && node ./out/test/runExperiment.js"
  },
  "devDependencies": {
    "@eslint/js": "^9.13.0",
    "@stylistic/eslint-plugin": "^2.9.0",
    "@types/glob": "^8.1.0",
    "@types/ini": "^4.1.1",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20",
    "@types/vscode": "^1.73.0",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.13.0",
    "glob": "^7.1.4",
    "mocha": "^10.2.0",
    "source-map-support": "^0.5.12",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.16.0"
  },
  "dependencies": {
    "@github/copilot-language-server": "^1.293.0",
    "@langchain/core": "^0.3.26",
    "@langchain/openai": "^0.3.16",
    "https-proxy-agent": "^7.0.5",
    "ini": "^5.0.0",
    "lru-cache": "^10.1.0",
    "minimatch": "^3.1.2",
    "ollama": "^0.5.12",
    "openai": "^4.77.0",
    "temp-dir": "^3.0.0"
  }
}
